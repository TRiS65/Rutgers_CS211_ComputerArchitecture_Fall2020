My strategy is to predetermine the unknown gates while scanning base on the number of inputs. Besides the Gates Linklist, I specially create a Linklist for just restoring unknown gates. While scanning the file, if this gate could be predetermine, instead of using the name in form of "Gn", adding this gate with its logic-gate name. In this way, the number of sampled gates is reduced. 
Here is my determine process: Since unknown gates show the number of variable m that this gate use and half of the gates have identified number of variables, I use this to determine the gate. If m = 2, it is the NOT-gate. If m is in form of (i+2^i), it is the DECODER-gate. If m is in form of (i+2^i+1), it is the MULTIPLEXER-gate. Therefore, there are only 3 possibilities remain: OR, AND, XOR. Next, I choose to use a 2D-array to mark my attemps and then approaching the correct answer. Compare to the original that using the full-order of the gates(6 logics), using this strategy to exclude three of them and the possibilities of unknown gates would likely to reduce a lot of repetitions. 
